@use '../globals' as *;
@use './links' as *;

@mixin _FocusedFrame(
	$frameOffset,
	$borderRadius,
	$borderColor: $var--color-theme-primary,
	$borderWidth: prem(2)
) {
	&::after {
		content: '';
		position: absolute;
		top: -$frameOffset;
		right: -$frameOffset;
		bottom: -$frameOffset;
		left: -$frameOffset;
		border: $borderWidth solid $borderColor;
		border-radius: $borderRadius;
	}
}

@mixin ButtonStyle($frameOffset: prem(4), $color: $var--color-theme-primary--text) {
	@include LinkStyle_Reset(true);
	--link-focus-outline: 0;

	$borderRadius: prem(3);
	// @include buttonReset(); // <-- This is NOT needed as `-basics` has global button reset

	// normalize links
	white-space: nowrap;
	vertical-align: middle;

	color: $color;
	background-color: $var--color-theme-primary;
	display: inline-block;
	line-height: prem(56);
	padding: 0 prem(20);
	margin-right: prem(30);
	margin-bottom: prem(16);
	text-align: center;
	border-radius: $borderRadius;
	position: relative;
	transition: all 150ms ease-in-out;
	transition-property: border-color, background-color, color, text-shadow, box-shadow;
	width: max-content;
	max-width: 100%;
	min-width: between_phone_netbook(100, 270);
	font-size: prem($font-btn-size);

	@media #{$mq-wide} {
		min-width: 270px;
	}

	&:hover,
	&:focus,
	&:active {
		text-decoration: none;
		box-shadow: 0 prem(12) prem(16) rgba(black, 0.09);
		color: $color;
	}
	&:active,
	&[aria-pressed='true'] {
		text-decoration: none;
		background-color: $var--color-theme-primary--dark;
		color: $color-suld-0;
	}
	&:focus {
		@include _FocusedFrame($frameOffset, $borderRadius);
	}

	&[disabled],
	&[aria-disabled='true'] {
		box-shadow: none;
		background-color: $var--color-theme-primary;
		opacity: 0.3;
	}

	&--small {
		line-height: prem(40);
		padding-left: prem(16);
		padding-right: prem(16);
		min-width: between_phone_netbook(70, 170);

		@media #{$mq-wide} {
			min-width: 170px;
		}
	}
}

$var--ButtonTertiary--color: var(--ButtonTertiary--color, _inherit);
$var--ButtonTertiary--dashColor: var(
	--ButtonTertiary--dashColor,
	$var--color-theme-primary--safeish
);
$var--ButtonTertiary--dashWidth: var(--ButtonTertiary--dashWidth, prem(16));
$var--ButtonTertiary--dashWidth--hover: var(--ButtonTertiary--dashWidth--hover, prem(48));
$var--ButtonTertiary--dashHeight: var(--ButtonTertiary--dashHeight, prem(2));

@mixin ButtonTertiaryStyle($mode: normal) {
	$borderRadius: prem(8);
	$dashWidth: prem(16);
	$dashWidth--hover: prem(48);

	@include LinkStyle_Reset(true);
	--link-focus-outline: 0;

	color: $var--ButtonTertiary--color;
	position: relative;
	display: inline-block;
	width: max-content;
	vertical-align: middle;
	white-space: nowrap;
	font-size: prem($font-btn-size);
	padding-right: calc(
		#{$var--ButtonTertiary--dashWidth--hover} - #{$var--ButtonTertiary--dashWidth}
	);
	margin-right: prem(15);
	margin-bottom: prem(16);
	font-weight: 700;
	transition: all 200ms ease-in-out;

	&::before {
		content: '';
		width: $var--ButtonTertiary--dashWidth;
		height: $var--ButtonTertiary--dashHeight;
		display: inline-block;
		vertical-align: middle;
		margin-bottom: prem(3);
		background-color: currentColor;
		color: $var--ButtonTertiary--dashColor;
		margin-right: prem(16);
		transition: inherit;
	}

	@if $mode == normal {
		&:active,
		&[aria-pressed='true'] {
			--ButtonTertiary--dashColor: _inherit;
			--ButtonTertiary--dashHeight: #{prem(6)};
		}
	}

	&:hover,
	&:focus,
	&:active {
		padding-right: prem(0);
		color: $var--ButtonTertiary--color;
	}
	&:hover::before,
	&:focus::before {
		width: $var--ButtonTertiary--dashWidth--hover;
	}

	&:focus {
		opacity: 0.5;
		@include _FocusedFrame(
			prem(8),
			prem(8),
			$var--ButtonTertiary--dashColor,
			prem(1)
		);
	}

	@if $mode == normal or $mode == disabledOnly {
		&[disabled],
		&[aria-disabled='true'] {
			--ButtonTertiary--dashColor: #{$var--ButtonTertiary--color};
			opacity: 0.5;
			pointer-events: none;
		}
	}
	@if $mode == normal {
		&--small {
			font-weight: 400;
		}
	}
}
