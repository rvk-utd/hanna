@use 'globals' as *;
@use 'styles/links' as *;

/*!@deps
	RowBlock
*/

// inlined by RowBlock
@mixin css() {
	@media screen {
		.RowBlockColumn {
			width: 100%; // to avoid flex item auto-sizing
		}
		.RowBlockColumn--background {
			background-color: $color-suld-25;
			box-sizing: content-box;
			margin: 0 $var--grid-edge--neg;
			padding: between_cols(30, 80) $var--grid-edge;
		}
		.RowBlockColumn--background--primary {
			background-color: $var--theme-color-primary;
			color: $var--theme-color-primary--text;
			@include LinkStyle_SameColor();
		}
	}

	@include media($mq-tablet_up) {
		.RowBlockColumn {
			width: cols_pct(6);
		}
		.RowBlockColumn--narrow {
			width: cols_pct(5, 5);
		}

		.RowBlockColumn--background {
			width: cols_pct(5, 5);
			align-self: stretch;
			--padding--inner: #{cols_pct(1, 0.5)};
		}
		.RowBlockColumn--background.RowBlockColumn--narrow[class] {
			width: cols_pct(4, 4);
			--padding--inner: #{cols_pct(1)};
		}

		:not(.RowBlock--align--right) > .RowBlockColumn--background:first-child,
		.RowBlock--align--right > .RowBlockColumn--background:last-child {
			padding-right: var(--padding--inner);
		}
		:not(.RowBlock--align--right) > .RowBlockColumn--background:last-child,
		.RowBlock--align--right > .RowBlockColumn--background:first-child {
			padding-left: var(--padding--inner);
		}
	}

	// ===========================================================================

	@media screen {
		:not(.RowBlock) > .RowBlockColumn {
			@include WARNING__('Must be direct child of a `RowBlock`');
		}
	}
}
