// screen-reader and rtl-friendly hiding
@mixin sr-only($mode: normal) {
	position: absolute;
	width: 1px;
	height: 1px;
	overflow: hidden;
	clip: rect(0, 0, 0, 0);
	opacity: 0.00001;
	pointer-events: none;
	@if $mode != soft {
		margin: -1px;
	}
}

// undo _sr-only() on :focus and :active
@mixin sr-only--undo($mode: normal) {
	width: auto;
	height: auto;
	overflow: visible;
	clip: auto;
	opacity: 1;
	pointer-events: auto;
	@if $mode!=soft {
		margin: 0;
	}
}

@mixin sr-only-focusable($styles: true, $link: #c00, $border: #029, $bg: #fff) {
	@include sr-only();

	&:active,
	&:focus,
	&:focus-within,
	&.--focus-within {
		@include sr-only--undo();
		@include _private__defaultFocusStyling($styles, $link, $border, $bg);
	}
}

@mixin sr-only-content-focusable(
	$styles: true,
	$link: #c00,
	$border: #029,
	$bg: #fff,
	$dir: ltr
) {
	@include sr-offscreen($dir);

	a:focus,
	a:active,
	button:focus {
		@include sr-offscreen-content--undo($dir);
		@include _private__defaultFocusStyling($styles, $link, $border, $bg);
	}
}

// Tuck elements off-screen
@mixin sr-offscreen($dir: ltr) {
	position: absolute;
	@if ($dir == ltr) {
		right: 9999px;
		left: auto;
	} @else {
		left: 9999px;
		right: auto;
	}
}
@mixin sr-offscreen--undo($dir: ltr) {
	z-index: 99999;
	@if ($dir == ltr) {
		right: auto;
	} @else {
		left: auto;
	}
}
@mixin sr-offscreen-content--undo($dir: ltr) {
	position: absolute;
	@if ($dir == ltr) {
		right: -9999px;
	} @else {
		left: -9999px;
	}
}

// ---------------------------------------------------------------------------

@mixin _private__defaultFocusStyling($styles, $link, $border, $bg) {
	z-index: 99999;
	@if ($styles == true) {
		font-size: 1em;
		background: $bg;
		border: 1px solid $border;
		margin: 0;
		padding: 0.2em 0.33em;
		color: $link;
		text-shadow: none;
		white-space: nowrap;
	} @else {
		@content;
	}
}
