@use '_globals' as *;
@use 'styles/links' as *;

@media screen {
	.Alert {
		--Alert-background: #{mix($color-faxafloi-50, white, 50%)}; // a11y hax
		--Alert-icon-color: #{$color-faxafloi-100};
		--Alert-icon: '#{$icons-info}';

		$linkColor: mix($color-faxafloi-100, $color-faxafloi-150, 80%);
		--link-color: #{$linkColor};
		--link-color-hover: #{$linkColor};

		background: var(--Alert-background);
		border-radius: prem(8);
		position: relative;

		padding: prem(13) prem(20) prem(12) prem(44);
		margin-bottom: prem(20);

		@include media($mq-tablet_up) {
			padding: prem(17) prem(32) prem(16) prem(64);
			margin-bottom: prem(30);
		}
	}
	.Alert::before {
		@include icon();
		content: var(--Alert-icon);
		color: var(--Alert-icon-color);

		font-size: prem(16);
		// line-height: prem(12);
		position: absolute;
		top: prem(14);
		left: prem(14);

		@include media($mq-tablet_up) {
			top: prem(17);
			left: prem(25);
		}
	}
	.Alert:not(.Alert--info):not(.Alert--success):not(.Alert--warning):not(.Alert--error):not(.Alert--critical) {
		@include WARNING__('"Type" modifier class-name is missing', $pos: after);
	}
	.Alert:not([role='alert']) {
		@include WARNING__('Should be role="alert"', $pos: after);
	}

	// 	// This is the default styling state
	// 	.Alert--info {
	// }

	.Alert--critical,
	.Alert--error {
		--Alert-background: #{mix($color-heidmork-50, white, 50%)}; // a11y hax
		--Alert-icon-color: #{$color-heidmork-100};
		--Alert-icon: '#{$icons-error}';
	}
	.Alert--warning {
		--Alert-background: #{$color-nautholsvik-50};
		--Alert-icon-color: #{mix($color-nautholsvik-100, $color-nautholsvik-150, 67%)}; // a11y hax
		--Alert-icon: '#{$icons-warning}';
	}
	.Alert--success {
		--Alert-background: #{mix($color-ellidarardalur-50, white, 60%)}; // a11y hax
		--Alert-icon-color: #{mix(
				$color-ellidarardalur-100,
				$color-ellidarardalur-150,
				67%
			)};
		--Alert-icon: '#{$icons-checkmark}';
	}

	// ---------------------------------------------------------------------------

	$closing-duration: 400ms;
	.Alert--closable {
		$ease-out-quartic: cubic-bezier(0.165, 0.84, 0.44, 1);
		transition: all $closing-duration 0ms;
		transition-timing-function: linear, $ease-out-quartic, ease-in-out, ease-in-out,
			ease-in-out;
		transition-property: visibility, max-height, opacity, margin, padding;
		max-height: 1000px;

		overflow: hidden;
		padding-right: prem(30);

		@include media($mq-tablet_up) {
			padding-right: prem(48);
		}
	}
	.Alert--closable[hidden][hidden] {
		display: block; // override default :hidden styling
		transition-delay: 0ms 0ms $closing-duration;
		opacity: 0;
		max-height: 0;
		padding-top: 0;
		padding-bottom: 0;
		margin-top: 0;
		margin-bottom: 0;
		visibility: hidden;
	}

	.Alert--closable[hidden][hidden]::before {
		transition: opacity 100ms ease-in-out;
		opacity: 0;
	}

	.Alert__close {
		@include LinkStyle_Reset(false);
		@include hideText(soft);
		position: absolute;
		top: prem(3);
		right: prem(-6);
		width: prem(42);
		height: prem(42);
		line-height: prem(40);
		transition: all 200ms ease-in-out;
		transition-property: font-size, opacity;
		font-size: prem(12);
		opacity: 0.67;

		@include media($mq-tablet_up) {
			opacity: 1;
			top: prem(7);
			right: prem(6);
		}
	}
	.Alert__close:hover,
	.Alert__close:focus,
	.Alert__close:active {
		opacity: 1;
		font-size: prem(16);
	}
	.Alert__close::before {
		@include icon($icons-close);
		margin-right: 1px;
		width: 100%;
	}

	[hidden] > .Alert__close {
		opacity: 0;
	}
}
