{
  "ts-node": {
    "require": ["tsconfig-paths/register"],
    "compilerOptions": { "module": "NodeNext" }
  },

  "compilerOptions": {
    "target": "ES2015",
    "lib": ["dom", "DOM.Iterable", "esnext"],
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    /*
      NOTE: If `esModuleInterop` is set to false,
      then the commonjs output for these sort of import statements
      ```esm
        import getBemClass from '@hugsmidjan/react/utils/getBemClass'; // commonjs module
        console.log(typeof getBemClass);  // 'function'
      ```
      will become:
      ```cjs
        const getBemClass_1 = require('@hugsmidjan/react/utils/getBemClass'); // commonjs module
        console.log(typeof getBemClass_1.default);  // 'undefined'
      ```
      ...which breaks things.
    */
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "nodenext",
    "importHelpers": true,
    "newLine": "LF",
    "resolveJsonModule": true,
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "noImplicitThis": false,
    "noUncheckedIndexedAccess": true,
    "jsx": "react",

    "isolatedModules": true,

    "paths": {
      "@reykjavik/hanna-css": ["./modules/hanna-css/src/lib"],
      // "@reykjavik/hanna-icons/*": ["./modules/hanna-icons/src/lib/*"],
      "@reykjavik/hanna-react/*": ["./modules/hanna-react/src/*"],
      // "@hugsmidjan_is/hanna-sprinkles/*": ["./modules/hanna-sprinkles/src/lib/*"],
      "@reykjavik/hanna-utils": ["./modules/hanna-utils/src"],
      "@reykjavik/hanna-utils/*": ["./modules/hanna-utils/src/*"],
      "hanna-test-helpers": ["./modules/test-helpers/"]
    }
  },

  // Include all *.ts(x) files in the project.
  // "include": ["**/*.ts", "**/*.tsx"],
  "exclude": ["node_modules", "**/_npm-lib", "**/__tests"]
}
